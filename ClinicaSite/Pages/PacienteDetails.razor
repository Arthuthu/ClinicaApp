@page "/pacientedetails/{pacienteid}"
@inject NavigationManager navManager;
@inject IUserDataService userDataService;
@inject IPacienteService pacienteService;
@inject IConsultaService consultaService;

@if (isInitialized)
{
	@if (Consulta is not null)
	{
		<div class="text-center text-primary fw-bold h4 my-4">
			Este paciente esta com uma consulta agendada para o dia @Consulta.Data
		</div>
		<div class="text-center text-info fw-bold h4 my-4">
			@Consulta.Descricao
		</div>
	}

	<div class="details-parent-div">
		<div class="details-div">
			<div class="details-label">
				Nome
			</div>
			<div>
				@Paciente!.Nome @Paciente.Sobrenome
			</div>
		</div>
		<div class="details-div">
			<div class="details-label">
				CPF
			</div>
			<div>
				@Paciente.CPF
			</div>
		</div>

		<div class="details-endereco-label">
			Endereço
		</div>
		<div class="details-endereco-first-main-div">
			<div class="text-center">
				<div class="details-label">
					CEP
				</div>
				<div>
					@Paciente.CEP
				</div>
			</div>

			<div class="text-center">
				<div class="details-label">
					Estado
				</div>
				<div>
					@Paciente.Estado
				</div>
			</div>

			<div class="text-center">
				<div class="details-label">
					Cidade
				</div>
				<div>
					@Paciente.Cidade
				</div>
			</div>
		</div>

		<div class="details-endereco-first-main-div">
			<div class="text-center">
				<div class="details-label">
					Bairro
				</div>
				<div>
					@Paciente.Bairro
				</div>
			</div>

			<div class="text-center">
				<div class="details-label">
					Rua
				</div>
				<div>
					@Paciente.Rua
				</div>
			</div>

			<div class="text-center">
				<div class="details-label">
					Numero
				</div>
				<div>
					@Paciente.NumeroRua
				</div>
			</div>
		</div>

		<div class="details-contato-label">
			Contato
		</div>
		<div class="details-endereco-first-main-div">
			<div class="text-center">
				<div class="details-label">
					Celular
				</div>
				<div>
					@Paciente.Cel
				</div>
			</div>

			<div class="text-center">
				<div class="details-label">
					Email
				</div>
				<div>
					@Paciente.Email
				</div>
			</div>
		</div>
	</div>

	@if (showHistoricoConsultas)
	{
		<div class="my-4">
			<HistoricoConsultaPaciente PacienteId="@PacienteId" />
		</div>
	}

	<div class="paciente-details-options-div">
		<div class="voltar-button-div">
			<a href="agendamento/@Paciente.Id" class="index-button">
				Agendar consulta
			</a>
		</div>
		<div class="voltar-button-div">
			<a href="editarcadastropaciente/@Paciente.Id" class="index-button">
				Editar
			</a>
		</div>
		<div class="voltar-button-div">
			<button @onclick="ToggleShowHistoricoConsultas" class="index-button" 
			id="historico-consultas-button">
				Histórico Consultas
			</button>
		</div>
		<div class="voltar-button-div">
			<a href="#" class="index-button">
				Voltar
			</a>
		</div>
	</div>
}

@code {
	[Parameter]
	public string? PacienteId { get; set; }
	private Guid LoggedInUserId { get; set; }
	private PacienteModel? Paciente { get; set; }
	private ConsultaModel? Consulta { get; set; }
	private List<ConsultaModel>? Consultas { get; set; }
	private bool showHistoricoConsultas = false;
	private bool isInitialized = false;

	protected override async Task OnInitializedAsync()
	{
		await PageVerification();
	}

	private async Task PageVerification()
	{
		if (PacienteId is null)
		{
			navManager.NavigateTo("/");	
		}	

		LoggedInUserId = await userDataService.GetLoggedInUserId();

		if (LoggedInUserId == Guid.Empty)
		{
			navManager.NavigateTo("/login");
		}

		Paciente = await pacienteService.GetPacienteById(new Guid(PacienteId!));

		if (Paciente is null)
		{
			navManager.NavigateTo("/");
		}

		if (Paciente!.ClinicaId != LoggedInUserId)
		{
			navManager.NavigateTo("/");
		}

		Consultas = await consultaService.GetConsultasByPacienteId(LoggedInUserId, Paciente!.Id);

		GetActiveConsulta();

		isInitialized = true;
	}

	private void GetActiveConsulta()
	{
		if (Consultas is not null)
		{
			foreach (var consulta in Consultas)
			{
				if (consulta.Data > DateTime.UtcNow.AddHours(-3))
				{
					Consulta = consulta;
				}
			}
		}
	}

	//Toggles

	private void ToggleShowHistoricoConsultas()
	{
		showHistoricoConsultas = !showHistoricoConsultas;
	}
}
